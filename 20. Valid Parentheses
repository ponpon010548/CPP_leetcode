//Runtime: 0 ms, faster than 100.00% of C++ online submissions for Valid Parentheses.
//Memory Usage: 6.3 MB, less than 100.00% of C++ online submissions for Valid Parentheses.

class Solution {
public:
    bool isValid(string s) {
        int length = s.size();
        if(s=="") return true;
        if(length%2 != 0) return false;
        map<char, char> m = {{')','('}, {']', '['}, {'}','{'}};
        stack <char> mystack;
        char temp;
        for(int i = 0; i < length ; i++){
            temp = s[i];
            switch(temp){
                case '(':
                    mystack.push(temp);
                    break;
                case '[':
                    mystack.push(temp);
                    break;
                case '{':
                    mystack.push(temp);
                    break;
                default:
                    temp = m[temp];
                     if(mystack.empty())
                        return false;
                    if(mystack.top()!=temp)
                        return false;                   
                    mystack.pop();
                    break;
            }
        }
        if(!mystack.empty()) return false;
        return true;
    }
};
