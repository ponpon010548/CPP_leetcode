/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        if(l1==NULL && l2==NULL)
            return l1;
        if(l1==NULL)
            return l2;
        if(l2==NULL)
            return l1;
        vector <int> v;
        ListNode* l1_head = l1;
        ListNode* l1_head_2 = l1;
        while(l1->next != NULL){
            v.push_back(l1->val);
            l1 = l1->next;
        }
        v.push_back(l1->val);
        l1->next = l2;        
        while(l2->next != NULL){
            v.push_back(l2->val);
            l2 = l2->next;
        }
        v.push_back(l2->val);
        sort(v.begin(),v.end());
        for (int i = 0; i < v.size(); i++){
            l1_head->val = v[i];
            l1_head = l1_head->next;
            
        }        
        return l1_head_2;
    }
};
